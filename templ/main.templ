package templ

import "strconv"

import models "github.com/AOjdanic/Rick_And_Morty_Mini_Project/models"

func isSelected(condition bool) string {
	if condition {
		return "selected"
	} else {
		return ""
	}
}

templ MainTemplate(species string, status string, gender string, results []models.Character, nextPage int) {
	<main>
		<form hx-target="div.grid" hx-select="div.grid" hx-swap="outerHTML">
			<select
				hx-push-url="true"
				hx-include=".search-input, this, #status, #gender"
				name="species"
				id="species"
				hx-get="/"
			>
				<option value="" { isSelected( species=="" ) }>Select a species</option>
				<option value="human" { isSelected( species=="human" ) }>Human</option>
				<option value="alien" { isSelected( species=="alien" ) }>Alien</option>
				<option value="humanoid" { isSelected( species=="humanoid" ) }>Humanoid</option>
				<option value="unknown" { isSelected( species=="unknown" ) }>Unknown</option>
				<option value="poopybutthole" { isSelected( species=="poopybutthole" ) }>Poopybutthole</option>
				<option value="mythological" { isSelected( species=="mythological" ) }>Mythological Creature</option>
				<option value="animal" { isSelected( species=="animal" ) }>Animal</option>
				<option value="robot" { isSelected( species=="robot" ) }>Robot</option>
				<option value="cronenberg" { isSelected( species=="cronenberg" ) }>Cronenberg</option>
				<option value="disease" { isSelected( species=="disease" ) }>Disease</option>
			</select>
			<select hx-push-url="true" hx-include=".search-input, #species, this, #gender" hx-get="/" name="status" id="status">
				<option value="" { isSelected( status=="" ) }>Select a status</option>
				<option value="alive" { isSelected( status=="alive" ) }>Alive</option>
				<option value="dead" { isSelected( status=="dead" ) }>Dead</option>
				<option value="unknown" { isSelected( status=="unknown" ) }>Unknown</option>
			</select>
			<select hx-push-url="true" hx-include=".search-input, #species, #status, this" name="gender" id="gender" hx-get="/">
				<option value="" { isSelected( gender=="" ) }>Select a gender</option>
				<option value="female" { isSelected( gender=="female" ) }>Female</option>
				<option value="male" { isSelected( gender=="male" ) }>Male</option>
				<option value="genderless" { isSelected( gender=="genderless" ) }>Genderless</option>
				<option value="unknown" { isSelected( gender=="unknown" ) }>Unknown</option>
			</select>
		</form>
		<div class="container">
			<div class="grid">
				for index, result := range results {
					if index == len(results)-1 {
						<a
							href={ "/character/" + strconv.Itoa(result.Id) }
							hx-trigger="intersect once, threshold=1"
							hx-target=".grid"
							hx-swap="beforeend"
							hx-select=".grid>a"
							hx-get={ "/?page=" + strconv.Itoa(nextPage) }
							hx-on=" revealed: this.removeAttribute('hx-trigger')"
							hx-include=".search-input, form"
						>
							<div class="card">
								<div>
									<img class="card-img" src={ result.Image } alt={ "image of " + result.Name }/>
								</div>
								<div>
									<h2 class=" name">{ result.Name }</h2>
									<span class="location">{ result.Location.Name }</span>
								</div>
							</div>
						</a>
					} else {
						<a href={ "/character/" + strconv.Itoa(result.Id) } hx-include=".search-input, form">
							<div class="card">
								<div>
									<img class="card-img" src={ result.Image } alt={ "image of " + result.Name }/>
								</div>
								<div>
									<h2 class="name">{ result.Name }</h2>
									<span class="location">{ result.Location.Name }</span>
								</div>
							</div>
						</a>
					}
				}
			</div>
		</div>
	</main>
}
